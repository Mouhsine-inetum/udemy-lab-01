trigger: none

parameters:
  - name: variableGroup
    type: string
    default: vg-pfu-infrastructure
  - name: serviceConnection
    type: string
    default: Visual Studio Professional Subscription(0f7a3b62-c1a4-4aa9-97c3-3bf5f497b5ab)
  - name: environment
    type: string
    values:
      - dev
      - acc
      - prod
    
variables:
  - group: ${{ parameters.variableGroup }}
  - name: version
    value: 001

stages:
  - stage: StageProvisionInfrastructureLogAnalytics
    displayName: "Stage: Provision InfraStructure - Log Analytics"
    jobs:
      - job: JobProvisionInfrastructureLogAnalytics
        displayName: "Job: Provision Infrstructure - Log Analytics"
        steps:
          - task: AzurePowerShell@5
            inputs:
              azureSubscription: '${{parameters.serviceConnection}}'
              ScriptType: 'FilePath'
              ScriptPath: '$(System.DefaultWorkingDirectory)/scripts/compile-bicep-to-arm.ps1'
              ScriptArguments: '
                                -filePath $(System.DefaultWorkingDirectory)/infra/loganalytics `
                                -bicepTemplate main.bicep `
                                -outFile main.json'
              azurePowerShellVersion: 'LatestVersion'
          
          - task: AzureResourceManagerTemplateDeployment@3
            inputs: 
              deploymentScope: 'Resource Group'
              AzureResourceManagerConnection: '${{parameters.serviceConnection}}'
              action: 'Create Or Update Resource Group'
              resourceGroupName: 'rg-$(companyShort)-$(domainShort)-$(appShort)-$(locationAbbr)-${ {parameters.environment }}-$(version)'
              location: '$(location)'
              templateLocation: 'Linked artifact'
              csmFile: 'infra/loganalytics/main.json'
              deploymentMode: 'Incremental'
              overrideParameters: >-
                -owner "$(owner)"
                -costCenter "$(costCenter)"
                -application "$(application)"
                -descp "$(desc)"
                -repo "$(repo)"
                -appShort "$(appShort)"
                -domainShort "$(domainShort)"
                -env "${{ parameters.environment }}"
                -version "$(version)"

